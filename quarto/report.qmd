---
title: "Звіт до роботи"
subtitle: "Проект з аналізу та візуалізації даних"
author: "{{< meta params.author1 >}}, {{< meta params.author2 >}}, {{< meta params.author3 >}}"
date: "now"
date-format: "Львів - YYYY"
params:
  ministry: МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ
  institution: НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ “ЛЬВІВСЬКА ПОЛІТЕХНІКА”
  department: Кафедра систем штучного інтелекту
  author1: Галич М.
  author2: Москаль В.
  author3: Козак І.
  group: ШІ-32
  lecturer: Шамуратов О.Ю.
  github: https://github.com/MaksymHalychShi2022/Grocery-Basket-Recommender
bibliography: references.bib
header-includes:
  - \nocite{*}
format:
  pdf:
    cite-method: biblatex
    documentclass: report
    title-page: true
    number-sections: true
    toc: true
    include-in-header: title.tex
---

# Abstract

У цьому дослідженні ми представили розробку рекомендаційної моделі для покупок у супермаркеті, використовуючи відкритий
датасет компанії Instacart. Наша робота спрямована на вирішення завдання передбачення продуктів, які клієнт, ймовірно,
придбає під час наступної покупки. Це завдання є ключовим для демонстрації можливостей сучасних рекомендаційних систем у
сфері електронної комерції продуктів харчування.

Основна цінність нашого проєкту полягає в його освітньому характері. Ми прагнули показати, як виглядає рекомендаційна
система на практиці, і створили приклад, з якого може почати кожен, хто бажає розібратися в її роботі. У процесі
розробки ми продемонстрували основні етапи побудови таких систем: аналіз даних, створення ознак, розробка моделі та її
інтеграція в прикладний інтерфейс.

Результати роботи, включаючи вихідний код, дані та інструкції, доступні в нашому
репозиторії: \url{ {{< meta params.github >}} }. Цей проєкт є чудовою відправною точкою
для тих, хто хоче навчитися розробляти рекомендаційні системи або зрозуміти їхню внутрішню структуру.

# Огляд предметної області

## Контекст завдання

**Що таке рекомендаційні системи і їхня роль у сучасному бізнесі.**
Рекомендаційні системи — це технології, які використовують дані для надання персоналізованих порад і прогнозів щодо
продуктів, послуг чи контенту. У світі з величезним вибором для клієнтів ці системи стали незамінним інструментом, який
допомагає бізнесу орієнтувати користувачів у великому потоці інформації. Вони працюють на основі аналізу даних, таких як
історія покупок, демографічні характеристики та поведінкові моделі інших користувачів.
<!-- This is a comment -->
У сучасному бізнесі, де клієнтський досвід має вирішальне значення, рекомендаційні системи стали ключовим способом
утримання клієнтів і збільшення продажів. Вони забезпечують персоналізований підхід, який відповідає очікуванням
сучасних споживачів. Завдяки таким системам клієнти отримують відчуття, що компанія розуміє їхні потреби і пропонує саме
те, що їм потрібно.
<!-- This is a comment -->
Також рекомендаційні системи спрощують процес вибору. У світі, де кількість доступних товарів і послуг може спричиняти
ефект перевантаження вибором, ці системи допомагають звузити опції до кількох найбільш релевантних. Це полегшує
прийняття рішень і знижує стрес клієнтів.
<!-- This is a comment -->
Окрім того, використання рекомендаційних систем безпосередньо впливає на прибутковість бізнесу. Вони збільшують шанси
продажу супутніх або дорогих товарів, що сприяє зростанню середнього чека і загального доходу компанії. Ще однією
важливою функцією таких систем є аналітика. Вони дозволяють бізнесу краще розуміти вподобання і поведінку клієнтів, а
також прогнозувати їхні потреби, що дає конкурентну перевагу.
<!-- This is a comment -->
Таким чином, у конкурентному середовищі без рекомендаційних систем компанії ризикують втратити клієнтів, які очікують
високого рівня персоналізації, технологічності та зручності.

**Використання рекомендаційних систем у роздрібній торгівлі.**
У сфері роздрібної торгівлі, особливо в супермаркетах, рекомендаційні системи відіграють надзвичайно важливу роль. Ця
галузь вирізняється великою різноманітністю товарів і значною кількістю транзакцій, що створює ідеальне середовище для
впровадження таких систем. Їх застосування дає змогу персоналізувати досвід покупця, що є важливим фактором для сучасних
клієнтів. У супермаркетах, де доступні тисячі товарів, рекомендаційна система здатна визначати саме ті продукти, які
відповідають звичкам і потребам споживача. Наприклад, якщо клієнт зазвичай купує органічні продукти, система може
запропонувати йому новинки в цьому сегменті.
<!-- This is a comment -->
Крім того, такі системи сприяють перехресним продажам, допомагаючи визначати товари, які часто купуються разом, і
рекомендувати їх клієнту. Якщо покупець додає до кошика макарони, система може порадити соус для пасти або сир. Також
рекомендаційні системи ефективно підтримують продажі акційних товарів. У ритейлі акції є важливим інструментом залучення
покупців, і їх ефективність значно зростає за умов таргетованого підходу. Наприклад, клієнту, який часто купує напої,
можна запропонувати знижку на певний бренд.
<!-- This is a comment -->
Використання рекомендацій дозволяє будувати довгострокові відносини з клієнтами, створюючи відчуття турботи та уваги до
їхніх потреб. Супермаркети, впроваджуючи такі технології, можуть аналізувати зміни у поведінці споживачів, виявляти
тренди, оптимізувати асортимент продукції і навіть впливати на розташування товарів на полицях, що додатково стимулює
продажі. Рекомендаційні системи стають ключовим інструментом у підвищенні ефективності роботи роздрібних мереж.

**Приклади успішного впровадження.**
Рекомендаційні системи є невід'ємною частиною бізнес-стратегії багатьох успішних компаній, таких як Amazon, Walmart і
Netflix. Вони демонструють, як правильно використання персоналізації та аналізу даних може змінити підхід до клієнта і
підвищити ефективність продажів.
<!-- This is a comment -->
Amazon є яскравим прикладом впровадження персоналізованих пропозицій. Компанія використовує потужні алгоритми для
аналізу поведінки мільйонів користувачів, враховуючи історію покупок, перегляди товарів та інші параметри. Наприклад,
якщо клієнт придбав фотоапарат, система може запропонувати додаткові аксесуари, такі як штатив чи карта пам’яті. Ця
стратегія є надзвичайно ефективною, адже, за даними Amazon, близько 35% їхніх продажів генерується саме через
рекомендації.
<!-- This is a comment -->
Walmart використовує рекомендаційні системи як в онлайн-магазині, так і у фізичних точках продажу. Системи аналізують
дані про покупки клієнтів, щоб надсилати персоналізовані пропозиції через мобільний додаток чи електронну пошту. Крім
цього, Walmart застосовує отримані дані для оптимізації запасів товарів та ефективного планування акцій, що дозволяє не
лише підвищити продажі, але й покращити управління ресурсами.
<!-- This is a comment -->
Netflix, хоча й працює у сфері стрімінгових послуг, демонструє, як принципи рекомендацій можна адаптувати до ритейлу.
Персоналізуючи контент на основі історії переглядів і вподобань користувачів, компанія пропонує максимально релевантні
фільми чи серіали. У роздрібній торгівлі цей підхід може бути застосований до аналізу даних про покупки, дозволяючи
передбачити потреби клієнтів і запропонувати їм найбільш актуальні товари.
<!-- This is a comment -->
Ці приклади показують, що рекомендаційні системи не лише підвищують продажі, але й роблять взаємодію з клієнтами
якіснішою, створюючи довгострокову лояльність. У ритейлі, зокрема у супермаркетах, де рішення про покупку часто
приймаються імпульсивно, такі системи можуть стати вирішальним фактором успіху.

## Цілі та проблематика

**Основна мета рекомендаційних систем у супермаркетах.**
Рекомендаційні системи у супермаркетах виконують важливі функції, які значно впливають як на бізнес-результати, так і на
досвід клієнтів. Їхня головна мета полягає у вирішенні трьох ключових завдань: персоналізації покупок, збільшення
середнього чека та покращення взаємодії клієнтів із магазином.
<!-- This is a comment -->
Персоналізація покупок спрямована на подолання труднощів, пов’язаних із великим асортиментом товарів. Клієнти нерідко
стикаються з проблемою вибору, що ускладнюється обмеженням часу. Рекомендації, створені спеціально для кожного покупця,
допомагають вирішити цю проблему, пропонуючи найбільш відповідні товари. Наприклад, клієнт, який часто купує дитяче
харчування, може отримувати пропозиції щодо нових або акційних товарів для дітей. Це персоналізоване підходження сприяє
формуванню лояльності, оскільки клієнт відчуває, що магазин розуміє його потреби.
<!-- This is a comment -->
Збільшення середнього чека досягається за рахунок методів перехресних продажів і апсейлу. Наприклад, клієнт, який купує
кавоварку, може отримати пропозиції щодо додаткових аксесуарів, таких як кавові капсули або засоби для догляду за
технікою. Завдяки цьому навіть ті товари, які клієнт спочатку не планував купувати, можуть бути додані до кошика, що
підвищує загальну вартість покупки.
<!-- This is a comment -->
Покращення досвіду клієнтів забезпечується оптимізацією процесу пошуку товарів, що значно економить час покупця. Окрім
цього, рекомендаційні системи можуть нагадувати про наявність улюблених товарів або про діючі на них знижки, що створює
відчуття турботи з боку магазину. Такий підхід робить покупки зручнішими та приємнішими, сприяючи зростанню
задоволеності клієнтів.

**Виклики, які стоять перед системами у контексті ритейлу.**
Сучасні супермаркети стикаються з проблемою великої кількості товарів і клієнтів, оскільки асортимент нараховує тисячі
позицій, а клієнтська база складається з мільйонів покупців. Обробка такого обсягу даних вимагає постійного оновлення
інформації про товари, врахування індивідуальних уподобань клієнтів і забезпечення швидкої обробки даних у реальному
часі. Це завдання ускладнюється з появою нових товарів і клієнтів, адже для них необхідно формувати релевантні
рекомендації.
<!-- This is a comment -->
Іншим викликом є частота повторних покупок, характерна для супермаркетів. Багато клієнтів регулярно купують одні й ті
самі товари, що зумовлює необхідність у врахуванні цієї регулярності. Однак надто передбачувані рекомендації можуть
знизити їх ефективність, тому система має постійно варіювати пропозиції, залишаючи їх актуальними та цікавими для
покупців.
<!-- This is a comment -->
Попит на товари також залежить від сезонності та зовнішніх факторів. Наприклад, у передсвятковий період зростає інтерес
до подарункових наборів, а влітку — до прохолодних напоїв та товарів для пікніка. Системи повинні адаптуватися до таких
змін, а також бути готовими до менш передбачуваних обставин, як-от економічні кризи чи пандемії, які впливають на
поведінку покупців.
<!-- This is a comment -->
Важливим викликом є моделювання взаємозв’язків між товарами, оскільки багато з них пов’язані непрямо. Наприклад, покупка
м’яса може стимулювати придбання спецій, а дитяче харчування — товарів для догляду за немовлятами. Системи повинні
виявляти такі закономірності та враховувати їхню релевантність для кожного клієнта.
<!-- This is a comment -->
Особливу увагу потребує інтеграція нових товарів, для яких відсутня історія покупок. У таких випадках традиційні
алгоритми можуть виявитися неефективними. Застосування гібридних моделей, які поєднують дані про характеристики товарів
із поведінковими даними, дозволяє подолати цю проблему.
<!-- This is a comment -->
Усі ці виклики підкреслюють складність розробки рекомендаційних систем у ритейлі. Їхня успішна реалізація залежить від
розуміння галузі, впровадження технологічних інновацій і постійного вдосконалення алгоритмів.

## Особливості предметної області

**Основні аспекти роздрібної торгівлі.**
Роздрібна торгівля є однією з найбільш динамічних і клієнтоорієнтованих сфер економіки, у якій рішення покупців залежать
від багатьох факторів. У цьому контексті розробка та впровадження рекомендаційних систем вимагають урахування
характерних особливостей галузі.
<!-- This is a comment -->
Вибір клієнтів значною мірою залежить від акцій, звичок і бюджету. Акції та знижки відіграють ключову роль у прийнятті
рішень про покупку, оскільки клієнти часто обирають товари, які раніше не купували, якщо на них діють вигідні
пропозиції. Звички покупців також є важливим аспектом: більшість покупок у супермаркетах повторювані, а клієнти зазвичай
формують свої "списки звичок" із регулярних товарів, таких як молоко, хліб або снеки. Крім того, бюджетні обмеження
можуть значно впливати на вибір, тому системи мають пропонувати товари, які відповідають фінансовим можливостям
клієнтів, або підказувати вигідні альтернативи.
<!-- This is a comment -->
Особливості зв’язків між товарами є ще одним важливим фактором. У супермаркетах часто зустрічаються комплементарні
товари, такі як макарони і соус чи м’ясо зі спеціями, які логічно пропонувати разом. Замінники також мають
враховуватися: якщо певний товар недоступний, система повинна пропонувати альтернативи, наприклад, інші марки молока чи
рослинні аналоги. Крім очевидних пар, існують і менш передбачувані зв’язки, які базуються на аналізі поведінки
споживачів, наприклад, товари, які мають спільну цільову аудиторію.
<!-- This is a comment -->
Таким чином, успішна робота рекомендаційних систем у роздрібній торгівлі вимагає врахування як звичних моделей поведінки
клієнтів, так і складних зв’язків між товарами, що формуються через безперервний аналіз великих обсягів даних.

**Відмінність від інших галузей.**
Рекомендаційні системи в ритейлі відрізняються своїми унікальними особливостями, зумовленими специфікою покупок у
супермаркетах, що суттєво відрізняється від рекомендацій у галузях, як-от розважальний контент чи електронна комерція
товарів тривалого користування.
<!-- This is a comment -->
Одна з ключових відмінностей полягає у високій частоті покупок, адже клієнти відвідують супермаркети часто, іноді навіть
кілька разів на тиждень. Це створює велику кількість даних для аналізу, однак також вимагає постійного оновлення
рекомендацій. Наприклад, товари, придбані вчора, не мають повторюватися в рекомендаціях сьогодні, якщо це не товари
щоденної потреби. У той час як у сфері книг чи фільмів частота взаємодії з клієнтом значно нижча, що дозволяє працювати
з довшими інтервалами між рекомендаціями.
<!-- This is a comment -->
Крім того, життєвий цикл товарів у ритейлі набагато коротший, особливо для продуктів із обмеженим терміном придатності,
як-от хліб чи молоко. Ці товари потрібно рекомендувати лише в актуальний момент, тоді як у галузі електроніки чи книг
цикл рекомендацій може охоплювати місяці або навіть роки.
<!-- This is a comment -->
Емоційність вибору також є характерною рисою ритейлу, адже рішення про покупку часто приймаються імпульсивно. Наприклад,
клієнт може несподівано купити шоколад чи снеки під впливом акції чи емоційного настрою. Це означає, що рекомендаційні
системи повинні враховувати не лише історичні дані, а й миттєві фактори, як-от час доби чи поточні знижки.
<!-- This is a comment -->
Категоризація товарів у ритейлі є складнішою, ніж у галузях, таких як книги чи фільми, де існують чіткі жанрові чи
тематичні поділи. У супермаркетах один товар, наприклад, йогурт, може належати одночасно до категорій здорового
харчування та десертів, що потребує застосування більш гнучких підходів до аналізу.
<!-- This is a comment -->
Додатково, попит на товари в ритейлі залежить від локальних і сезонних факторів. Наприклад, гарячі напої стають
популярнішими взимку, тоді як улітку зростає попит на морозиво. У галузях, як-от стрімінгові сервіси, сезонність значно
менш впливає на вибір контенту.
<!-- This is a comment -->
Унікальні особливості ритейлу вимагають від рекомендаційних систем гнучкості, адаптивності до швидких змін і здатності
працювати з великими обсягами даних, враховуючи водночас потреби клієнтів для створення зручного та персоналізованого
досвіду покупок.

## Основні методи побудови рекомендаційних систем

Рекомендаційні системи базуються на різних підходах до аналізу даних, кожен із яких має свої сильні та слабкі сторони.
Основними методами є **колабораційна фільтрація** та **контентні методи**, які часто поєднуються у гібридних системах
для досягнення більшої точності та гнучкості.

**Колабораційна фільтрація.**
Колабораційна фільтрація є одним із найпопулярніших підходів у створенні рекомендаційних систем. Її суть полягає у
використанні інформації про поведінку інших користувачів для надання рекомендацій, що дозволяє обійтися без детального
розуміння характеристик товарів. Цей метод працює за принципом: "користувачі, схожі на вас, обирають ці товари".
Наприклад, якщо два клієнти мають схожі історії покупок, товари, які обрав один із них, можуть бути рекомендовані
іншому. Так само товари, популярні серед великої групи користувачів, пропонуються новим клієнтам.
<!-- This is a comment -->
Колабораційна фільтрація може реалізовуватися через два підходи. Перший – user-based, коли аналізується схожість між
користувачами. Наприклад, якщо двоє клієнтів часто купують однакові товари, система вважає їх схожими та рекомендує їхні
покупки один одному. Другий – item-based, де фокус спрямований на схожість між товарами. Наприклад, якщо клієнти, які
купують каву, часто купують також вершки, система пропонує вершки тим, хто вибирає каву.
<!-- This is a comment -->
Основними перевагами цього методу є здатність адаптуватися до нових даних, що постійно надходять у систему, та
відсутність потреби в детальній інформації про товари, оскільки аналіз базується виключно на даних транзакцій. Водночас
існують певні недоліки. Зокрема, проблема холодного старту, коли система не може надати рекомендації новим користувачам
або для нових товарів через брак даних. Також із зростанням кількості користувачів і товарів збільшується потреба в
обчислювальних ресурсах для аналізу. Крім того, система може бути упередженою до популярних товарів, що призводить до
ігнорування менш популярних, але потенційно релевантних продуктів.

**Контентні методи.**
Контентні методи рекомендацій базуються на аналізі характеристик товарів і уподобаннях користувача. Їхня основна ідея
полягає в тому, щоб досліджувати властивості товарів, які клієнт уже придбав або переглядав, і пропонувати схожі товари.
Наприклад, якщо клієнт часто обирає органічну їжу, система може запропонувати інші товари з цієї ж категорії.
<!-- This is a comment -->
Однією з головних переваг цього підходу є його здатність працювати для нових користувачів, навіть якщо в системі немає
достатньої історії їхніх покупок. Рекомендації будуються на основі чітких характеристик товарів, що забезпечує
прозорість процесу й дозволяє користувачам зрозуміти, чому було запропоновано той чи інший товар. Крім того, контентні
методи відзначаються гнучкістю, оскільки вони дозволяють адаптувати рекомендації до індивідуальних уподобань
користувача.
<!-- This is a comment -->
Водночас цей підхід має недоліки. Зокрема, система може пропонувати тільки схожі товари, що обмежує варіативність
рекомендацій і зменшує ймовірність несподіваних або креативних пропозицій. Також товари, які клієнт ще не пробував,
можуть залишатися поза увагою системи. Ефективність методу значною мірою залежить від наявності детального й якісного
опису характеристик кожного товару, що може ускладнювати його реалізацію.

**Гібридні системи.**
Гібридні системи об'єднують переваги колабораційної фільтрації та контентних методів, компенсуючи недоліки кожного з
них. Це дає змогу створювати точні й універсальні рекомендації. У таких системах результати колабораційної фільтрації
можуть використовуватися для виявлення популярних товарів, які потім персоналізуються за допомогою аналізу характеристик
товарів. Наприклад, система може знаходити схожих клієнтів за допомогою колабораційного методу, але враховувати атрибути
товарів для більш точного визначення відповідних рекомендацій.
<!-- This is a comment -->
Комбінування методів у гібридних системах може здійснюватися кількома способами. Каскадний підхід передбачає спочатку
застосування одного методу, результати якого уточнюються іншим. Змішаний підхід використовує обидва методи одночасно,
надаючи перевагу найбільш релевантним рекомендаціям. Також існує модель на основі мета-алгоритмів, де дані з обох
методів поєднуються складнішими алгоритмами, наприклад, через машинне навчання.
<!-- This is a comment -->
Гібридні системи мають чимало переваг. Вони зменшують проблему холодного старту, забезпечують баланс між точністю та
варіативністю рекомендацій і краще враховують індивідуальні уподобання клієнтів. Водночас ці системи є складними для
реалізації, потребують значних обчислювальних ресурсів і великої кількості даних — як про поведінку клієнтів, так і про
характеристики товарів.
<!-- This is a comment -->
Побудова рекомендаційної системи вимагає вибору підходу залежно від цілей бізнесу, доступних даних і технічних обмежень.
Хоча гібридні системи зазвичай є найбільш ефективними, їхня реалізація потребує високої кваліфікації та ресурсів. У
ритейлі розуміння цих методів є ключовим для створення ефективної системи рекомендацій.

# Пошук та підготовка даних

## Опис джерела даних

Дані для проекту були отримані з Kaggle-змагання Instacart, яке проводилося у 2017 році. Це змагання, організоване
компанією Instacart, надає унікальну можливість працювати з реальними історичними даними про покупки користувачів
сервісу. Instacart є провідною платформою для доставки продуктів у США. Для участі в змаганні компанія спеціально
анонімізувала та надала частину своєї бази даних. Це рішення є винятковим, оскільки подібні дані зазвичай залишаються
конфіденційними через їхню комерційну цінність.
<!-- This is a comment -->
Робота з реальними даними відкриває можливості для створення моделей, які враховують природні шуми, неоднорідності та
закономірності поведінки користувачів, що значно підвищує точність і практичну цінність рекомендаційних систем. Такі
дані дозволяють тестувати підходи до побудови моделей у максимально реалістичних умовах.
<!-- This is a comment -->
Такі характеристики роблять цей датасет ідеальним для створення практичної рекомендаційної системи, яка адаптується до
змін у поведінці користувачів. Крім того, великий обсяг даних забезпечує можливості для побудови складних моделей
машинного навчання.

**Реляційна структура.**
Датасет організований у вигляді реляційної моделі, яка складається з кількох взаємопов’язаних таблиць. Ця структура
дозволяє зручно поєднувати інформацію для аналізу та моделювання. На рисунку нижче представлено схему зв’язків між
таблицями, яка наочно ілюструє їхню взаємодію.

[//]: # (https://miro.medium.com/v2/resize:fit:720/format:webp/1*0c0vK-sbU8OqObWFs7imHw.png)
![Датасет](assets/data_diagram.png)

Ключовою особливістю датасету є його поділ на три набори:

- prior: Набір даних для побудови ознак (feature extraction). Він містить історичні замовлення, які використовуються для
  аналізу поведінки користувачів і створення нових ознак.
- train: Набір даних для тренування моделі. У цьому наборі вказано, які товари були замовлені у кожному замовленні, що
  дозволяє навчитись визначати патерни покупок.
- test: Набір даних, на якому потрібно зробити передбачення. Результати для цього набору завантажуються на Kaggle як
  submission для оцінки якості моделі.

Ця структура дозволяє ефективно розділити завдання на етапи аналізу, навчання і тестування.

**Обсяг датасету.**
Instacart надав великий обсяг даних, що включає мільйони записів, які відображають реальні сценарії покупок. Огляд
основних параметрів датасету представлений у @tbl-dataset-size

: Розмір датасету {#tbl-dataset-size}

| Елемент     | Кількість |
|-------------|-----------|
| Користувачі | 206 209   |
| Товари      | 49 688    |
| Замовлення  | 3 421 083 |

## Exploratory Data Analysis (EDA)

### Ключові цілі аналізу

Exploratory Data Analysis (EDA) дозволяє отримати цінні інсайти зі структури та вмісту даних, які є основою для побудови
моделей прогнозування, зокрема для передбачення повторних покупок. Однією з ключових цілей є розуміння поведінки
користувачів, включаючи виявлення пікових днів і годин замовлень, а також визначення частоти повторних покупок. Інша
мета полягає в оцінці популярності продуктів, аналізуючи, які товари є найбільш затребуваними та які з них мають високий
рівень повторного замовлення. Аналіз змінних дозволяє виявити взаємозв'язок між часом доби, днем тижня та іншими
факторами. Врешті, мета полягає у виявленні закономірностей, що мотивують користувачів здійснювати замовлення в певний
час або обирати конкретні продукти.

### Аналізовані змінні

Для виконання EDA використовуються різні змінні, які поділяються на кілька категорій. Часові змінні включають день
тижня (`order_dow`), що дозволяє визначити, коли користувачі найчастіше здійснюють замовлення, час доби (
`order_hour_of_day`), який показує години пікової активності, та інтервал між замовленнями  
(`days_since_prior_order`), що вказує на частоту покупок. Продуктові змінні, такі як ідентифікатор продукту (
`product_id`) та інформація про повторні замовлення (`reordered`), дозволяють визначити популярність товарів та рівень
їх лояльності. Також розглядаються змінні, пов'язані з користувачами: унікальний ідентифікатор користувача (`user_id`)
та загальна кількість замовлень (`order_number`).

### Деталізований аналіз та візуалізації

**Аналіз часу замовлень**

Аналіз часу замовлень починається з розгляду розподілу за днями тижня. Дослідження показує, що найбільша кількість
замовлень здійснюється у вихідні дні, з піком у неділю, тоді як середина тижня характеризується зменшенням активності.

![Замовлення за днями тижня](assets/DoW_orders.png)

Щодо розподілу за годинами доби, більшість замовлень припадає на інтервал з 10:00 до 16:00, причому найвищий рівень
активності спостерігається об 10:00. У нічні години активність значно знижується.

![Замовлення за годинами доби](assets/orders_by_hour.png)

Аналіз інтервалів між замовленнями показує, що клієнти часто дотримуються регулярного циклу покупок із періодичністю 7,
14, 21 або 30 днів.

![Період до повторного замовлення](assets/days_since_prior_order.png)

**Популярність продуктів**

Популярність продуктів аналізується через розподіл замовлень. Найпопулярніші товари включають фрукти, овочі, молочні
продукти та інші товари щоденного вжитку. Візуалізації демонструють їхню відносну частку в загальному обсязі покупок.

![Популярність продуктів](assets/products_popularity.png)

Також досліджуються продукти з найвищим коефіцієнтом повторного замовлення, які свідчать про високу лояльність
користувачів. Ці продукти часто є основними товарами в замовленнях і відображають сталі споживчі звички.

![Коефіцієнти повторних замовлень](assets/reorder_coefs.png)

**Поведінковий аналіз**

Поведінковий аналіз фокусується на кількості продуктів у замовленнях. Більшість замовлень містять від 5 до 15 продуктів.
Маленькі замовлення, як правило, є терміновими, тоді як великі свідчать про планування запасів.

![Кількість продуктів в замовленні](assets/num_products_per_order.png)

Аналіз взаємозв'язку між часом доби та інтервалом між замовленнями вказує, що ранкові клієнти, як правило, мають менші
інтервали, тоді як вечірні – більші.

![Залежність часу покупки і днів до наступного замовлення](assets/time_vs_days_to_order.png)

**Кореляційний аналіз**

Теплова карта кореляцій дозволяє виявити взаємозв'язки між основними змінними. Наприклад, існує слабка негативна
кореляція між інтервалом між замовленнями та кількістю продуктів: чим рідше клієнт робить замовлення, тим більша їх
кількість. Загалом, поведінка клієнтів є багатофакторною і залежить від низки взаємопов'язаних чинників.

![Кореляційна матриця](assets/heatmap.png)

Аналіз показує, що поведінкові цикли клієнтів можна використовувати для побудови персоналізованих рекомендацій,
враховуючи регулярність покупок. Популярність базових продуктів робить їх важливим інструментом для утримання клієнтів і
збільшення обсягів продажів. Різниця в поведінці клієнтів, зокрема між ранковими та вечірніми покупцями, потребує
індивідуального підходу для ефективного передбачення та рекомендацій.

## Створення ознак

Ознаки (features) у машинному навчанні — це структуровані дані, які є основою для навчання моделей. Вони описують
характеристики або властивості об’єктів, які аналізуються моделлю, і визначають здатність алгоритмів ефективно виявляти
закономірності. У рекомендаційних системах ознаки можуть відображати поведінку користувачів, характеристики продуктів, а
також взаємодії між ними, як-от історія покупок чи частота повторного замовлення.

Процес створення ознак, відомий як побудова ознак (feature engineering), включає ідентифікацію, обчислення та підготовку
релевантних характеристик. Його основна мета полягає в тому, щоб забезпечити модель необхідними даними для аналізу. Це
передбачає обчислення статистичних показників, агрегування інформації, обробку пропущених значень та нормалізацію даних.
Якість ознак безпосередньо впливає на ефективність моделі: навіть найсучасніші алгоритми можуть працювати погано, якщо
ознаки створені неправильно або є нерелевантними. Тому побудова ознак є критичним етапом розробки будь-якої системи
машинного навчання.

У рекомендаційних системах, заснованих на характеристиках (контентні методи), створення ознак є
ключовим аспектом. Такі системи генерують рекомендації, аналізуючи характеристики продуктів та поведінкові дані
користувачів. Для досягнення цієї мети необхідно створити релевантні ознаки, які описують як продукти, так і
користувачів, а також взаємодії між ними.

Характеристичні рекомендаційні моделі базуються на припущенні, що інформація про характеристики продуктів і поведінкові
дані користувачів дозволяють точно передбачати, які продукти можуть зацікавити конкретного користувача. Побудова якісних
ознак у цьому контексті передбачає обчислення статистичних даних, агрегування поведінкових патернів і нормалізацію
характеристик, щоб зробити дані зручними для аналізу моделлю. У нашій моделі процес побудови ознак був спрямований на
відображення звичок користувачів, властивостей продуктів і патернів їхньої взаємодії.

### Ознаки на рівні користувача (user features)

Ознаки на рівні користувача відіграють ключову роль у розумінні індивідуальної поведінки покупців. Ці ознаки дозволяють
моделі аналізувати унікальні патерни замовлень кожного користувача, забезпечуючи основу для персоналізації рекомендацій.
Врахування таких характеристик дає змогу алгоритму ідентифікувати звички користувачів, їхні вподобання та частоту
взаємодії з різними категоріями продуктів.

Однією з основних ознак є загальна кількість замовлень, які користувач зробив за весь період аналізу. Ця ознака,
позначена як _u_total_orders_, надає загальне уявлення про активність покупця. Її обчислення базується на максимальному
номері замовлення, зареєстрованого в історії користувача. Вона є важливим індикатором, який дозволяє оцінити, наскільки
часто користувач взаємодіє з платформою.

Інша важлива ознака — середня кількість продуктів у замовленні (_u_avg_prd_). Ця характеристика описує звички
користувача
стосовно кількості товарів, які він зазвичай додає до свого кошика. Для її обчислення враховується загальна кількість
продуктів у всіх замовленнях користувача, яка ділиться на загальну кількість його замовлень. Така ознака дає змогу
моделі враховувати типового користувача, який, наприклад, робить невеликі щоденні покупки або ж накопичує товари для
великих замовлень.

Для моделювання тимчасових патернів створюються ознаки, які вказують на найпоширеніший день тижня та час доби для
здійснення покупок. Ознака _u_dow_mode_ представляє день тижня, коли користувач найчастіше оформляє замовлення. Вона
обчислюється шляхом визначення моди у розподілі днів тижня для історії покупок користувача. Аналогічно, ознака
_u_hod_mode_ відображає найпоширенішу годину дня, коли користувач здійснює покупки. Ці ознаки є корисними для
передбачення
того, коли користувач, ймовірно, буде здійснювати замовлення, що може підвищити актуальність рекомендацій.

Ознака _u_reorder_ratio_ є ключовою для розуміння звички користувача повторно замовляти ті самі продукти. Вона
представляє
частку замовлень, у яких товари були позначені як повторно замовлені. Ця характеристика розраховується як середнє
значення змінної reordered у всіх замовленнях користувача. Високе значення цієї ознаки вказує на те, що користувач має
стабільний набір продуктів, які він регулярно замовляє, тоді як низьке значення може свідчити про те, що користувач
часто експериментує з новими продуктами.

Усі ці ознаки формують глибокий профіль поведінки користувача, який дозволяє моделі краще зрозуміти його звички та
вподобання. Вони створюють основу для генерації персоналізованих рекомендацій, які враховують як загальну активність
користувача, так і його унікальні патерни поведінки.

### Ознаки на рівні продуктів (product features)

Ознаки на рівні продуктів відображають популярність та характеристики окремих товарів. Вони дають змогу моделі оцінювати
загальні тенденції щодо того, які продукти частіше купуються, наскільки вони є повторюваними у замовленнях і як вони
зазвичай розташовуються в кошику. Ці ознаки є важливими для моделювання, оскільки вони визначають, які продукти мають
високий попит і є основою для генерації рекомендацій на основі характеристик самих товарів.

Однією з основних ознак є загальна кількість замовлень продукту (_p_total_orders_). Вона відображає, скільки разів
продукт
був замовлений у всіх замовленнях усіх користувачів. Ця ознака обчислюється шляхом підрахунку загальної кількості
замовлень, у яких фігурував продукт. Високе значення цієї характеристики може свідчити про популярність продукту, що
робить його ймовірним кандидатом для рекомендацій у разі недостатності даних про вподобання конкретного користувача.

Коефіцієнт повторного замовлення продукту (_p_reorder_ratio_) характеризує частку замовлень, у яких цей продукт був
позначений як повторно замовлений. Ця ознака обчислюється як середнє значення змінної reordered для всіх замовлень
продукту. Високий коефіцієнт повторного замовлення свідчить про те, що користувачі часто повертаються до цього продукту,
що вказує на його стабільність у вподобаннях клієнтів. Низьке значення може означати, що продукт купують рідше або що
він є одноразовим у багатьох випадках використання.

Середня позиція продукту в кошику (_p_avg_cart_position_) показує, наскільки рано чи пізно продукт додається до кошика
під
час покупок. Ця ознака розраховується як середнє значення змінної add_to_cart_order, яка вказує на порядок додавання
продукту в кошик. Продукти, які зазвичай знаходяться на початку списку, можуть бути основними товарами, які користувачі
додають у першу чергу. Натомість продукти із високою середньою позицією можуть бути додані пізніше, часто як додаткові
покупки або товари за акціями.

Ці ознаки забезпечують моделі можливість враховувати унікальні характеристики кожного продукту, створюючи базу для
рекомендацій, що базуються на популярності товарів та їхній ролі у кошику. Вони є критичними для розуміння вподобань
користувачів та забезпечення точності прогнозів.

### Ознаки взаємодії користувач-продукт (user-product features)

Ознаки, які описують взаємодії між користувачем та конкретним продуктом, є критично важливими для моделювання
персональних вподобань. Вони дозволяють системі враховувати індивідуальні звички користувачів стосовно окремих продуктів
і їхній патерн повторних покупок. Такі ознаки забезпечують більш глибоке розуміння відносин між користувачами та
продуктами, що значно підвищує точність рекомендацій.

Загальна кількість замовлень конкретного продукту користувачем (up_total_orders) відображає, наскільки часто користувач
купує певний товар. Ця ознака обчислюється шляхом підрахунку всіх випадків, коли продукт був включений до замовлень
користувача. Високе значення вказує на те, що продукт є регулярною частиною споживчого кошика користувача, що робить
його логічним вибором для рекомендацій. Натомість низьке значення може свідчити про те, що продукт був куплений лише
один або кілька разів, і його доцільно пропонувати з обережністю.

Коефіцієнт повторного замовлення продукту користувачем (up_reorder_ratio) характеризує частку замовлень, у яких
користувач знову обирав той самий продукт. Для його обчислення враховується кількість замовлень продукту користувачем
відносно діапазону замовлень, у яких продукт міг бути доданий до кошика. Цей коефіцієнт враховує, коли продукт був
замовлений вперше і в якому діапазоні замовлень він надалі додавався. Високий коефіцієнт вказує на лояльність
користувача до продукту, що робить його основним кандидатом для рекомендацій. Низький коефіцієнт може свідчити про
випадкову покупку.

Кількість разів, коли продукт був замовлений у останніх п’яти замовленнях користувача (up_last_five), дозволяє моделі
враховувати актуальність продукту у поведінці користувача. Для обчислення цієї ознаки аналізуються лише останні п’ять
замовлень користувача, після чого визначається, скільки разів конкретний продукт був присутній у цих замовленнях. Ця
характеристика нормалізується, щоб відобразити частоту присутності продукту в останніх замовленнях. Високе значення
вказує на те, що продукт є актуальним для користувача зараз, що робить його важливим кандидатом для рекомендацій у
найближчому майбутньому.

Ознаки на рівні взаємодії користувач-продукт забезпечують моделі унікальні дані, які відображають персональні уподобання
користувача до кожного продукту. Вони допомагають врахувати як історичну поведінку, так і поточні пріоритети
користувача, що є критично важливим для створення точних і персоналізованих рекомендацій.

### Методи обчислення та збереження ознак

Обчислення ознак у цьому проєкті базувалося на групуванні, агрегуванні та трансформації даних. Основні таблиці, такі як
історія замовлень і список товарів, були об’єднані для формування повної інформаційної бази. Кожна група ознак
створювалася окремо, залежно від рівня даних: користувачів, продуктів або їхньої взаємодії. Збереження ознак
організовувалося у форматі CSV із використанням реляційної моделі даних. Ключові атрибути, такі як user_id і product_id,
використовувалися для з’єднання таблиць між собою.

Для забезпечення зручності й структури іменування використовувалися префікси, які вказували на рівень ознаки. Ознаки
користувачів позначалися префіксом u_, наприклад, u_total_orders. Ознаки продуктів мали префікс p_, наприклад,
p_total_orders. Ознаки, що описують взаємодії між користувачами та продуктами, позначалися як up_, наприклад,
up_total_orders. Такий підхід дозволяв чітко відрізняти типи ознак і забезпечував зручність при інтеграції даних.

Об’єднання ознак у фінальний датасет виконувалося за допомогою функції pd.merge із бібліотеки pandas. Спочатку таблиця
взаємодій користувач-продукт із ознаками (up_) об’єднувалася з таблицею ознак користувачів (u_) через ключ user_id.
Після цього до отриманого результату додавалися ознаки продуктів (p_) за ключем product_id. Таким чином, кожен запис у
фінальній таблиці включав повний набір ознак, що описують користувача, продукт і їхню взаємодію.

Структура збереження ознак у вигляді окремих таблиць із чіткими ключами забезпечувала модульність і легкість оновлення.
Наприклад, додавання нової ознаки до певної таблиці не потребувало змін у загальному процесі інтеграції. Це робило
процес обчислення та використання ознак ефективним і адаптивним до змін у даних. Завдяки такій системі можна було швидко
формувати повний датасет для навчання моделі та забезпечувати її точність і гнучкість.

## Аналіз створених ознак

Для аналізу створених ознак ми використовували Sweetviz, який дозволив оцінити якість і властивості кожної ознаки через
зручні візуалізації та статистичні показники. Цей інструмент допоміг швидко отримати інформацію про розподіл значень,
пропущені дані та загальні характеристики ознак.

Згенерований звіт Sweetviz містить кілька ключових розділів. По-перше, він надає глобальний огляд набору даних,
включаючи загальну кількість записів, кількість числових і категоріальних змінних, а також інформацію про пропущені
значення в кожній ознаці. Це дозволяє одразу отримати уявлення про структуру набору даних.

Окремо для кожної ознаки звіт показує детальну статистику, таку як середнє, медіана, мінімальні та максимальні значення,
а також розподіл даних. Для числових змінних Sweetviz генерує графіки розподілу, які дозволяють візуально оцінити
збалансованість даних і можливі перекоси. Для категоріальних змінних звіт надає частоти унікальних значень, що допомагає
зрозуміти, наскільки вони домінують або розподілені рівномірно.

Ще одним важливим компонентом є інтерактивність звіту. У згенерованому HTML-файлі можна переглядати кожну ознаку окремо,
порівнювати змінні та зручно переходити між розділами. Крім того, Sweetviz дозволяє побачити розподіли даних у контексті
цільової змінної, що корисно для кращого розуміння їхньої ролі (цей аспект ми детально обговоримо в іншому розділі).

Звіт Sweetviz, який ми створили для цього проекту, є доступним для перегляду в асетах до релізу нашого проекту на
GitHub. Це дозволяє будь-кому, хто працює з репозиторієм, легко отримати доступ до аналізу фіч і використовувати його
для глибшого розуміння набору даних. Інтерактивність та візуальна привабливість звіту роблять його цінним інструментом
як для технічних, так і для нетехнічних членів команди.

### Кореляцйний аналіз

Аналіз кореляційних зв’язків між створеними ознаками показав, як різні фічі пов’язані між собою та наскільки вони можуть
дублювати інформацію або бути взаємозалежними. Матриця кореляцій була побудована на основі коефіцієнтів кореляції
Пірсона, де значення від -1 до 1 вказують на ступінь лінійного зв’язку між ознаками. Значення, близькі до 1 або -1,
свідчать про сильну залежність, тоді як значення, близькі до 0, вказують на слабкий або відсутній лінійний зв’язок.

![Матриця кореляцій між ознаками](assets/feature_correlation_matrix.png)

Деякі ознаки демонструють сильну кореляцію. Наприклад, ознаки up_last_five і up_reorder_ratio мають високу позитивну
кореляцію (0.664), що свідчить про схожість їхніх патернів поведінки. Це може бути очікувано, оскільки останні кілька
дій користувача часто відображають ймовірність повторного замовлення продукту. Схожий зв’язок спостерігається між
u_total_orders та u_reorder_ratio, де коефіцієнт кореляції становить 0.669. Це логічно, адже частка повторних замовлень
безпосередньо залежить від загальної кількості замовлень користувача. Крім того, ознаки, пов’язані з продуктами, такі як
p_reorder_ratio та p_total_orders, також мають позитивну кореляцію (0.420), що може свідчити про те, що популярність
продукту впливає на ймовірність його повторного замовлення.

Ознаки з низькими значеннями кореляції, такі як u_dow_mode та u_hod_mode, демонструють практично повну незалежність від
інших змінних. Наприклад, кореляція між u_dow_mode і будь-якою іншою ознакою є майже нульовою. Це означає, що ця фіча
може додавати унікальну інформацію до моделі, яка не дублюється іншими ознаками.

Негативні кореляції також виявили цікаві закономірності. Наприклад, p_avg_cart_position і p_reorder_ratio мають високий
негативний зв’язок (-0.523), що свідчить про те, що продукти, які зазвичай розміщуються на початку кошика, мають вищу
ймовірність повторного замовлення. Це відповідає логіці, оскільки товари, які часто купують, зазвичай додаються до
кошика першими. Подібний негативний зв’язок спостерігається між p_avg_cart_position і p_total_orders (-0.334), що
підтверджує припущення про залежність популярності продукту від його середньої позиції в кошику.

Загалом, більшість ознак демонструють слабкі або помірні кореляції, що свідчить про їхню унікальність і різноманітність
інформації, яку вони додають до моделі. Однак, сильна кореляція між деякими фічами, такими як up_last_five і
up_reorder_ratio, може вказувати на можливе дублювання інформації, що потребує додаткової уваги під час моделювання. З
іншого боку, слабкі кореляції не завжди означають відсутність зв’язку, оскільки можливі нелінійні залежності, які цей
аналіз не враховує.

### Аналіз важливості ознак

На рисунку нижче показано порівняння важливості ознак для трьох моделей (Random Forest, XGBoost,
LightGBM), і, виходячи з наданих даних, кожна модель демонструє унікальний підхід до оцінки внеску ознак у результати.

![Порівняння важливості ознак](assets/feature_importance_comparison.png)

Для Random Forest найважливішою ознакою є up_last_five з вагою 0.39, що означає, що ця ознака є ключовою для
передбачення. За нею слідує up_reorder_ratio з вагою 0.28, яка також суттєво впливає на результати. up_total_orders має
третю за важливістю вагу — 0.17, що робить її значущою, хоча й не настільки сильною, як перші дві. Решта ознак, як-от
u_total_orders, p_avg_cart_position та p_reorder_ratio, мають незначну важливість (приблизно 0.03 або менше). Це
говорить про те, що модель надає найбільше значення комбінації ознак, які описують індивідуальні патерни користувача та
продукту, що впливають на ймовірність повторного замовлення.

У випадку XGBoost, ми бачимо надзвичайно високу вагу для ознаки up_last_five (0.77), яка домінує серед усіх інших. Це
вказує на те, що модель дуже залежить від цієї ознаки для своїх прогнозів. Інші ознаки, включно з up_reorder_ratio (
0.14) та up_total_orders (0.03), мають значно меншу вагу. Це може свідчити про те, що XGBoost добре працює з дуже
значущими ознаками, і роль другорядних характеристик тут мінімальна. Решта ознак, як-от p_avg_cart_position чи
p_total_orders, практично не враховуються, маючи вагу близько 0.01 або навіть 0.0.

На відміну від попередніх моделей, LightGBM демонструє більш збалансоване використання ознак. Жодна ознака не має
домінуючої ваги, як у XGBoost. Наприклад, up_last_five має вагу лише 0.08, тоді як up_reorder_ratio (0.12) та
u_reorder_ratio (0.17) є найважливішими. Також LightGBM враховує ширший спектр ознак, таких як u_avg_prd (0.11),
p_reorder_ratio (0.11) та u_total_orders (0.14), що свідчить про здатність моделі враховувати більше контексту для
прийняття рішень. Невеликі, але помітні ваги також отримують ознаки u_hod_mode (0.05) та p_avg_cart_position (0.04), які
є майже ігнорованими іншими моделями.

Загалом, можна побачити, що XGBoost робить великий акцент на одній ключовій ознаці (up_last_five), тоді як Random Forest
враховує декілька важливих ознак, але все ще фокусується на найзначущих. LightGBM, у свою чергу, показує більше
збалансованості, враховуючи різноманітність ознак, що може бути корисним для більш загальних моделей або складніших
сценаріїв.

# Методика дослідження

## Формування цільової змінної reordered

Для розробки рекомендаційної системи було використано класифікаційні моделі машинного навчання. Завдання полягало у
передбаченні цільової змінної reordered, яка вказує, чи буде товар повторно замовлено клієнтом. Ця змінна
базується на аналізі історичних даних про покупки, наданих у датасеті Instacart.

Історичні дані включають записи про всі замовлення кожного користувача, а також інформацію про товари, які були
придбані. Для кожного товару, придбаного користувачем, аналізувалося, чи був він замовлений повторно в наступних
замовленнях. Якщо товар входив до поточного замовлення і з'являвся повторно у майбутніх замовленнях, йому присвоювалося
значення reordered = 1. Це свідчить про те, що товар є постійною складовою у списку покупок користувача. Якщо товар або
не був замовлений повторно, або з'явився у замовленні вперше, змінна reordered отримувала значення 0.

Процес створення змінної reordered вимагав аналізу хронологічної структури даних. Замовлення кожного користувача
впорядковувалися за часом, що дало змогу простежити, які товари замовлялися знову, а які були разовими покупками. Для
цього використовувалися атрибути, доступні в датасеті, як-от унікальні ідентифікатори замовлень, продукти та
користувачі.

На щастя, цей важливий етап уже був виконаний, і змінна reordered була надана безпосередньо в датасеті. Це значно
спростило процес підготовки даних і дозволило сфокусуватися на розробці моделей. Варто зазначити, що змінна reordered
має суттєву диспропорцію в розподілі: більшість товарів не замовляються повторно, що додає складності до задачі
передбачення.

## Налаштування моделей

Для розробки рекомендаційної системи були обрані три моделі машинного навчання: Random Forest, LightGBM та XGBoost.
Вибір цих моделей обґрунтовано їх ефективністю у роботі з табличними даними, гнучкістю у налаштуванні параметрів і
здатністю працювати з незбалансованими даними. Усі ці методи засновані на деревах рішень, що забезпечує стійкість до
масштабу даних. Завдяки цьому нормалізація чи стандартизація даних не є обов’язковою під час підготовки вибірки.
Гіперпараметри моделей були оптимізовані за допомогою методу Grid Search. @tbl-grid-search ілюструє
гіперпараметри, які підлягали оптимізації, з виділенням найкращих значень жирним шрифтом.

: Гіперпараметри для Grid Search {#tbl-grid-search}

| Parameter         | RandomForest  | LightGBM        | XGBoost          |
|-------------------|---------------|-----------------|------------------|
| n_estimators      | [50, **100**] | [50, **100**]   | [**100**]        |
| learning_rate     | -             | [0.05, **0.1**] | [0.05, **0.1**]  |
| max_depth         | [5, **7**]    | [4, 6, **8**]   | [5, **7**]       |
| min_samples_split | [2, **5**]    | -               | -                |
| min_samples_leaf  | [**1**, 2, 5] | -               | -                |
| scale_pos_weight  | -             | -               | [**10**, 20, 25] |

**Random Forest.** Random Forest є базовою моделлю класифікації, заснованою на ансамблі дерев рішень. Її стійкість до
переобучення, простота налаштування та здатність працювати з категоріальними і числовими даними роблять її надійним
вибором для задач такого типу. Використання параметра class_weight='balanced' допомогло врахувати дисбаланс у даних.

**LightGBM.** LightGBM побудований на техніці градієнтного бустингу дерев рішень, що забезпечує високу швидкість і
ефективність. Модель не потребує нормалізації даних, оскільки використовує тільки відносини між фічами для створення
рішень. Крім того, параметр class_weight='balanced' допомагає справлятися з незбалансованими вибірками, що є перевагою
для задачі.

**XGBoost.** XGBoost, як і LightGBM, є реалізацією градієнтного бустингу на основі дерев рішень. Його популярність
обумовлена гнучкістю, високою точністю і стійкістю до переобучення. Як і інші моделі на базі дерев рішень, XGBoost не
потребує нормалізації фіч. Параметр scale_pos_weight дозволив ефективно врахувати дисбаланс класів у задачі.

# Результати

Розроблені моделі були оцінені за метриками F1, Precision, Recall та фінальною оцінкою Submission F1, отриманою після
завантаження результатів на платформу kaggle змагання Instacart Market Basket Analysis як Late Submission . @tbl-metrics
узагальнює ці показники для всіх трьох моделей. У процесі формування submission прогнозувалися ймовірності повторного
замовлення товарів, і до остаточного списку включалися лише ті товари, які мали ймовірність не менше 0.5.

: Метрики отримані на валідаційному сеті та результат зі змагання instacart (Public Score) {#tbl-metrics}

| Model        | F1 (↑)     | Precision (↑) | Recall (↑) | Submission (F1) (↑) |
|--------------|------------|---------------|------------|---------------------|
| RandomForest | 0.2601     | 0.1576        | **0.7448** | 0.3442              |
| LightGBM     | 0.2605     | 0.1584        | 0.7324     | 0.3405              |
| XGBoost      | **0.2980** | **0.1945**    | 0.6367     | **0.3656**          |

**F1 та Precision.** Модель XGBoost продемонструвала найкращий F1-результат на валідаційному наборі (0.2980), що вказує
на її ефективність у знаходженні балансу між Precision та Recall. Найвищий показник Precision (0.1945) також належить
XGBoost, що підтверджує її здатність уникати помилкових спрацювань.
Моделі RandomForest і LightGBM показали схожі результати за F1 (0.2601 і 0.2605 відповідно), але Precision у них був
значно нижчим, що вказує на більшу кількість помилкових позитивних передбачень.

**Recall.** Найвищий показник Recall (0.7448) був отриманий за допомогою RandomForest. Ця модель краще за інші виявляє
всі можливі позитивні приклади, тобто продукти, які можуть бути повторно замовлені. Проте висока чутливість цієї моделі
до позитивних випадків призводить до зниження Precision, оскільки значна частина передбачень є помилковими.

**Submission F1.** Для submission на платформі Instacart використовувався поріг ймовірності 0.5. Такий
підхід дозволив забезпечити чітке визначення товарів для рекомендації, але також залежав від здатності моделей коректно
оцінювати ймовірності. XGBoost досяг найвищого Submission F1 (0.3656), що підтверджує її здатність до узагальнення
результатів на тестових даних. RandomForest (0.3442) і LightGBM (0.3405) показали нижчі результати на тестових даних, що
може свідчити про їхню деяку схильність до переобучення або менш точну оцінку ймовірностей.

XGBoost показав найкращі результати за більшістю метрик. Це підкреслює його ефективність для задач класифікації з
дисбалансом даних, де потрібно оптимізувати F1-метрику. Однак, ця модель вимагає ретельного налаштування гіперпараметрів
для досягнення оптимальних результатів. RandomForest забезпечує високу чутливість (Recall), що корисно, якщо важливо
захопити всі можливі позитивні
випадки. Проте, низький Precision обмежує її практичну корисність у цій задачі. LightGBM демонструє хорошу
продуктивність, але поступається XGBoost за узагальнюючими властивостями.

# Користувацький інтерфейс

## Інтеграція моделі в застосунок для замовлення продуктів

Інтеграція рекомендаційної моделі в застосунок для замовлення продуктів є важливим кроком, який забезпечує її практичну
користь для кінцевих користувачів. Така модель може бути розгорнута у вигляді окремого серверного компонента, який
працює незалежно від основного застосунку. Взаємодія з моделлю відбувається через API, що дає змогу передавати дані
користувача, такі як історія покупок або контекстні фактори (наприклад, сезонність чи знижки), і отримувати готові
рекомендації.
<!-- This is a comment -->
Сервер моделі може бути реалізований на основі веб-фреймворків, таких як Flask або FastAPI. API дозволяє обмінюватися
даними у форматі JSON, забезпечуючи простоту інтеграції. Завдяки такому підходу, рекомендаційна модель стає модульною,
масштабованою і легко адаптується до зростання кількості запитів. Масштабування може бути досягнуте через використання
контейнеризації, наприклад, з Docker, або оркестрації через Kubernetes.
<!-- This is a comment -->
Для застосунку модель може стати основою для кількох функцій. На головній сторінці користувачеві можна показувати
персоналізовані рекомендації, наприклад, товари, які він часто купує, або популярні продукти з урахуванням сезону. Під
час формування списку покупок система може доповнювати його пропозиціями продуктів, які зазвичай купуються разом із вже
доданими. У розділі кошика, перед оформленням замовлення, користувач може бачити додаткові рекомендації, які
відповідають його попереднім виборам. Також під час пошуку товарів модель може покращити ранжування результатів, роблячи
їх релевантними до уподобань користувача.
<!-- This is a comment -->
Модель має бути оптимізованою для швидкої обробки запитів у реальному часі, щоб не викликати затримок у роботі
застосунку. Для ефективності її роботи важливо враховувати історію покупок користувача, його уподобання та контекстні
фактори. Зворотний зв’язок від користувачів, наприклад, інформація про корисність запропонованих рекомендацій, може
використовуватися для подальшого навчання і вдосконалення моделі.

Ідеально, щоб інтерфейс для кінцевих користувачів був повноцінним застосунком для покупок, інтегрованим із моделлю.
Однак, враховуючи обмеження студентського проєкту, для демонстрації роботи моделі було використано бібліотеку Gradio.

## Gradio

Gradio є інструментом, який дозволяє швидко створювати інтерактивні веб-інтерфейси для Python-функцій або моделей
машинного навчання. Його головна перевага полягає в тому, що він забезпечує можливість взаємодії з алгоритмами та
моделями без необхідності розробляти повноцінні веб-додатки. Завдяки цьому Gradio стає незамінним інструментом для
демонстрації, тестування та взаємодії зі складними технологіями.
<!-- This is a comment -->
Однією з найбільш цінних рис Gradio є його підтримка широкого спектра типів даних, включаючи текст, зображення, аудіо,
відео та числові дані. Це дає змогу створювати інтерфейси для найрізноманітніших додатків – від класифікації зображень
до генерації звуку чи обробки тексту. Такий підхід робить Gradio універсальним інструментом для роботи з багатими й
різноманітними наборами даних.
<!-- This is a comment -->
Принцип роботи Gradio є доволі простим, що робить його доступним навіть для новачків. Розробник описує функцію, яка
обробляє вхідні дані, і визначає формат введення та виведення. Gradio автоматично генерує веб-інтерфейс, який можна
запускати локально, інтегрувати у веб-додатки або робити доступним через публічне посилання. Це забезпечує високий
рівень гнучкості, дозволяючи демонструвати результати роботи моделі не лише локально, а й у хмарних середовищах чи через
спільний доступ.

Gradio знаходить широке застосування у сфері машинного навчання. Він дозволяє ефективно демонструвати роботу моделей,
зокрема для задач класифікації зображень, аналізу тексту, генерації мовлення, резюмування текстів, обробки аудіо чи
відео. Наприклад, Gradio може бути використаний для створення інтерфейсу, який приймає зображення та видає його
категорію, або для текстових моделей, що здійснюють переклад чи генерують резюме. У дослідженнях інструмент сприяє
швидкому тестуванню нових ідей, дозволяючи розробникам та дослідникам оцінювати продуктивність алгоритмів в
інтерактивному середовищі.
<!-- This is a comment -->
Крім того, Gradio широко застосовується у сфері освіти. Інструмент дозволяє створювати інтуїтивно зрозумілі демонстрації
алгоритмів чи концепцій, що сприяє кращому розумінню складних ідей. Для викладачів це стає ефективним засобом залучення
студентів до роботи з сучасними технологіями.
<!-- This is a comment -->
Gradio є надзвичайно потужним і зручним інструментом для розробників, дослідників та освітян. Його простота
використання, широкий функціонал і можливість швидкої інтеграції дозволяють значно скоротити час і зусилля, необхідні
для створення інтерфейсів для складних моделей чи алгоритмів. Це робить Gradio важливим елементом у роботі з машинним
навчанням і сучасними технологіями загалом.

## Опис можливостей створеної аплікації

Створена аплікація є інтерактивним веб-інтерфейсом для демонстрації персоналізованої рекомендаційної системи продуктів,
розробленої з використанням бібліотеки Gradio. Основна ідея цієї програми полягає в тому, щоб дати змогу користувачам
легко взаємодіяти з моделлю машинного навчання, яка надає рекомендації на основі унікального ідентифікатора користувача,
попередньо навченого алгоритму та заданого порогу ймовірності. Такий підхід дозволяє ефективно презентувати результати
роботи системи, тестувати моделі та отримувати зворотний зв’язок від користувачів. Аплікація та детальна інструкція по
її запуску доступна у нашому репозиторії на GitHub.

**Вхідні поля.** Інтерфейс програми складається з трьох основних вхідних елементів, які роблять її функціональною та
зручною у використанні.
<!-- This is a comment -->
Перше вхідне поле — це текстове поле для введення ідентифікатора користувача (user_id). Кожен користувач у системі має
унікальний ідентифікатор, який служить основою для персоналізації рекомендацій. Цей ідентифікатор використовується для
вибору відповідних даних про користувача та формування прогнозів на основі його попередніх взаємодій із продуктами.
<!-- This is a comment -->
Друге вхідне поле дозволяє завантажувати файл моделі. Користувачі можуть завантажувати файл із попередньо навченим
алгоритмом у форматі .pkl. Це забезпечує гнучкість у роботі, оскільки система може працювати з різними моделями без
необхідності змінювати або повторно запускати програму. Ця функція також дозволяє порівнювати ефективність різних
алгоритмів у рамках одного і того ж інтерфейсу.
<!-- This is a comment -->
Третє вхідне поле реалізоване у вигляді повзунка, який дозволяє користувачам встановлювати поріг ймовірності, що
варіюється від 0 до 1. Завдяки цьому елементу користувачі можуть контролювати рівень чутливості системи: нижчі значення
порогу забезпечують більш широкий спектр рекомендацій, тоді як вищі значення обмежують результати до найбільш
релевантних продуктів.

**Вихідні поля.** Результати роботи системи відображаються у вигляді інтерактивної таблиці, яка надає всю необхідну
інформацію про рекомендовані продукти. Таблиця містить три основні стовпці: ID продукту (product_id), назву продукту (
product_name) та ймовірність (probability). ID продукту є унікальним ідентифікатором товару з бази даних, що дозволяє
легко ідентифікувати конкретний продукт. Назва продукту є текстовим описом, зрозумілим для кінцевого користувача, що
спрощує сприйняття результатів. Ймовірність відображає ступінь впевненості моделі у тому, що цей продукт може зацікавити
користувача. Значення ймовірності округлюються до двох знаків після коми, щоб забезпечити зручність сприйняття.
<!-- This is a comment -->
Таблиця є інтерактивною і дозволяє сортувати дані за будь-яким із трьох стовпців. Користувач може впорядкувати
результати за зростанням або спаданням значень, наприклад, переглянути продукти з найвищою ймовірністю або впорядкувати
список за алфавітом. Така функціональність робить аналіз рекомендацій простішим та інтуїтивно зрозумілим, особливо для
користувачів, які хочуть глибше ознайомитися з результатами роботи моделі.
<!-- This is a comment -->
Зображення інтерфейсу аплікації подано на рисунку 5.1, де можна побачити, як виглядає форма введення, вихідні результати
та інтерактивна таблиця з можливістю сортування даних. Це наочно демонструє зручність і простоту використання створеного
інструменту.

![Інтерфес аплікації](assets/gradio_interface.png)

Інтерактивний характер таблиці дозволяє користувачам легко переглядати результати, які автоматично оновлюються залежно
від введених параметрів. Одна з важливих особливостей аплікації — це використання кешування для оптимізації
продуктивності. При введенні нового ідентифікатора користувача система зберігає дані, пов’язані з цим користувачем, у
пам’яті. Це включає особливості взаємодії користувача з продуктами, а також особливості самих продуктів. Завдяки цьому
механізму повторні запити для того ж самого користувача виконуються швидше, оскільки система уникає необхідності
повторного завантаження та обробки даних.
<!-- This is a comment -->
Схожий підхід застосовується до завантаження моделей. Якщо користувач завантажує ту саму модель кілька разів, система
розпізнає це і використовує вже наявний об'єкт моделі, що значно скорочує час виконання. Цей механізм дозволяє аплікації
ефективно працювати навіть із великими обсягами даних.
<!-- This is a comment -->
Створена аплікація слугує прикладом інтерактивного інструменту для презентації та тестування рекомендаційних систем.
Вона є корисною у навчальних і дослідницьких цілях, дозволяючи легко взаємодіяти з моделями машинного навчання.
Наприклад, аплікація може бути використана для демонстрації роботи алгоритмів науковим співробітникам, студентам або
іншим зацікавленим сторонам. Завдяки можливості швидко змінювати параметри моделі та поріг рекомендацій, інструмент
дозволяє дослідникам порівнювати ефективність різних моделей у реальному часі.
<!-- This is a comment -->
Крім того, аплікація показує, як подібні інтерфейси можуть бути інтегровані в більш масштабні комерційні системи. У
реальних умовах вона може стати основою для побудови систем рекомендацій у супермаркетах або інтернет-магазинах, що
забезпечують персоналізовані пропозиції для кожного клієнта.

# Висновки

У ході проекту було розроблено рекомендаційну модель для покупок у супермаркеті, яка базується на реальних даних
Kaggle-змагання Instacart. Модель враховує поведінку користувачів, характеристики продуктів і їхню взаємодію. Проведений
аналіз та тестування показали, що система здатна ефективно передбачати повторні покупки, покращуючи персоналізацію
клієнтського досвіду та збільшуючи середній чек. Серед розроблених ознак найбільш значущими виявилися ті, що
відображають індивідуальні патерни поведінки користувачів, такі як останні повторні покупки або коефіцієнт повторного
замовлення.

З трьох протестованих моделей (Random Forest, LightGBM, XGBoost) найкращий результат продемонструвала XGBoost, яка
досягла високої точності та ефективності як на валідаційному наборі, так і на тестовому наборі Kaggle. У той же час,
LightGBM показала збалансований підхід до врахування різних ознак, що може бути корисним для більш комплексних
сценаріїв.

У майбутньому модель можна покращити шляхом впровадження глибоких нейронних мереж або трансформерів, які здатні
працювати з великими обсягами даних. Додавання таких факторів, як сезонність, акції чи локальні особливості, дозволить
підвищити точність рекомендацій. Крім того, оптимізація обчислень, наприклад, через використання хмарних сервісів,
зробить систему більш масштабованою. Розроблений прототип підтвердив свою ефективність і став базою для подальшого
вдосконалення рекомендаційних систем у сфері ритейлу. Ця робота демонструє практичну цінність використання таких
підходів у сучасному бізнесі.